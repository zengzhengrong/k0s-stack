apiVersion: k0s.k0sproject.io/v1beta1
kind: ClusterConfig
metadata:
  name: k0s
spec:
  extensions:
    helm:
      repositories:
      - name: argo
        url: https://argoproj.github.io/argo-helm
      - name: k8tz
        url: https://k8tz.github.io/k8tz
      charts:
      - name: argocd
        chartname: argo/argo-cd
        namespace: default
        version: "5.36.11"
        values: |
          controller:
            args:
              appResyncPeriod: "90"
          server:
            extraArgs:
              - --insecure
            ingress:
              annotations:
                nginx.ingress.kubernetes.io/ssl-redirect: "false"
                nginx.ingress.kubernetes.io/use-forwarded-headers: "true"
                nginx.ingress.kubernetes.io/compute-full-forwarded-for: "true"
              enabled: true
              hosts: 
                - argocd.localhost
              ingressClassName: nginx
            config:
              timeout.reconciliation: 30s
              exec.enabled: "true"
              users.anonymous.enabled: "false"
              accounts.zzr: apiKey, login
              server.rbac.log.enforce.enable: "true"
              passwordPattern: "^.{5,32}$"
            rbacConfig:
              policy.default: role:readonly
            extensions:
              enabled: true
              image:
                tag: "v0.2.1"
              resources:
                limits:
                  cpu: 50m
                  memory: 128Mi
                requests:
                  cpu: 10m
                  memory: 64Mi
          configs:
            secret:
              argocdServerAdminPassword: $2a$10$geIjyqBxjeqyYesrQPe1deq9CyO04DKpIqT/BqJHvYl.Y0/LDf.p2
      - name: argo-apps
        chartname: argo/argocd-apps
        namespace: default
        version: "1.2.0"
        values: |
          projects:
            - name: default
              clusterResourceWhitelist:
              - group: '*'
                kind: '*'
              destinations:
              - namespace: '*'
                server: '*'
              sourceRepos:
              - '*'
          applications:
            - name: ingress-nginx
              destination:
                namespace: ingress-nginx
                server: https://kubernetes.default.svc
              project: default
              source:
                chart: ingress-nginx
                helm:
                  parameters:
                  - name: controller.tolerations[0].key
                    value: node-role.kubernetes.io/master
                  - name: controller.tolerations[0].operator
                    value: Exists
                  - name: controller.tolerations[0].effect
                    value: NoSchedule
                  - name: controller.nodeSelector.\node\.k0sproject\.io/role
                    value: control-plane
                  - name: controller.service.type
                    value: NodePort
                  - name: controller.service.nodePorts.http
                    value: '32080'
                  - name: controller.service.nodePorts.https
                    value: '32443'
                  - name: controller.service.nodePorts.tcp.6550
                    value: '30665'
                  - name: tcp.6550
                    value: 'pulsar/pulsar-proxy:6650'
                  - name: controller.service.nodePorts.tcp.3306
                    value: '30306'
                  - name: tcp.3306
                    value: 'radondb-mysql/sample-leader:3306'
                  - name: controller.service.nodePorts.tcp.6379
                    value: '30379'
                  - name: tcp.6379
                    value: 'redis/redis-standalone-external-service:6379'
                  - name: controller.service.nodePorts.tcp.9000
                    value: '30900'
                  - name: tcp.9000
                    value: 'clickhouse/clickhouse-minimal:9000'
                  - name: controller.service.nodePorts.tcp.8123
                    value: '30812'
                  - name: tpc.8123
                    value: 'clickhouse/clickhouse-minimal:8123'
                  - name: controller.metrics.serviceMonitor.enabled
                    value: 'true'
                  - name: controller.metrics.serviceMonitor.additionalLabels.release
                    value: kube-prometheus-stack
                repoURL: https://kubernetes.github.io/ingress-nginx
                targetRevision: 4.4.0
              syncPolicy:
                automated:
                  prune: true
                  allowEmpty: false
                syncOptions:
                - CreateNamespace=true
            - name: argo-workflows
              destination:
                namespace: argo
                server: https://kubernetes.default.svc
              project: default
              source:
                chart: argo-workflows
                helm:
                  parameters:
                  - name: server.ingress.enabled
                    value: "true"
                  - name: server.ingress.ingressClassName
                    value: nginx
                  - name: mainContainer.imagePullPolicy
                    value: IfNotPresent
                  - name: images.pullPolicy
                    value: IfNotPresent
                  - name: server.servicePortName
                    value: http
                  - name: server.ingress.hosts[0]
                    value: argostack.localhost
                repoURL: https://argoproj.github.io/argo-helm
                targetRevision: 0.17.1
              syncPolicy:
                automated:
                  prune: true
                  selfHeal: true
                syncOptions:
                - CreateNamespace=true
            - name: openebs
              finalizers:
              - resources-finalizer.argocd.argoproj.io
              project: default
              source:
                repoURL: 'https://openebs.github.io/charts'
                targetRevision: 3.0.3
                helm:
                  parameters:
                    - name: localpv-provisioner.enabled
                      value: 'true'
                    - name: ndm.enabled
                      value: 'false'
                    - name: provisioner.enabled
                      value: 'false'
                    - name: ndmOperator.enabled
                      value: 'false'
                chart: openebs
              destination:
                server: 'https://kubernetes.default.svc'
                namespace: openebs
              syncPolicy:
                automated:
                  prune: true
                  selfHeal: true
                syncOptions:
                  - CreateNamespace=true
            - name: k8tz
              finalizers:
              - resources-finalizer.argocd.argoproj.io
              project: default
              source:
                repoURL: 'https://k8tz.github.io/k8tz'
                targetRevision: 0.13.0
                helm:
                  parameters:
                    - name: timezone
                      value: Asia/Shanghai
                    - name: verbose
                      value: 'true'
                chart: k8tz
              destination:
                server: 'https://kubernetes.default.svc'
                namespace: k8tz
              syncPolicy:
                automated:
                  prune: true
                  selfHeal: true
                syncOptions:
                  - CreateNamespace=true
            - name: traffic-manager
              finalizers:
              - resources-finalizer.argocd.argoproj.io
              project: default
              source:
                repoURL: 'https://app.getambassador.io'
                targetRevision: 2.10.6
                helm:
                  valueFiles:
                    - values.yaml
                chart: telepresence
              destination:
                server: 'https://kubernetes.default.svc'
                namespace: ambassador
              syncPolicy:
                automated:
                  prune: true
                  selfHeal: true
                syncOptions:
                  - CreateNamespace=true